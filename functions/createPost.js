import {Scenes, Markup} from "telegraf";
import {create_post_text} from "../assets/text.js";

const [title, price, article, mark, description, link] = Object.values(create_post_text);

export const createPost = new Scenes.WizardScene(
    'postScene',

    //  Title
    (ctx) => {
      ctx.reply(title);
      return ctx.wizard.next();

    },
    // Price
    (ctx) => {
      ctx.session.postData = ctx.session.postData || {};
      ctx.session.postData.title = ctx.message.text;
      ctx.reply(price);
      return ctx.wizard.next();
    },

    // Price Validation and Mark Prompt
    (ctx) => {
      const priceValue = parseInt(ctx.message.text);

      if (isNaN(priceValue)) {
        ctx.reply("‚ùå –¶—ñ–Ω–∞ –ø–æ–≤–∏–Ω–Ω–∞ –±—É—Ç–∏ —á–∏—Å–ª–æ–º! –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑:");
        return;
      }

      ctx.session.postData.price = priceValue;
      ctx.reply(article);
      return ctx.wizard.next();
    },

    // Article
    (ctx) => {
      const articleValue = parseInt(ctx.message.text);

      if (isNaN(articleValue)) {
        ctx.reply("‚ùå –ê—Ä—Ç–∏–∫—É–ª –ø–æ–≤–∏–Ω–µ–Ω –±—É—Ç–∏ —á–∏—Å–ª–æ–º! –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑:");
        return;
      }

      ctx.session.postData.article = ctx.message.text;
      ctx.reply(
        mark,
        Markup.inlineKeyboard([
          [Markup.button.callback("üÜí", "üÜí"), Markup.button.callback("‚ö†Ô∏è", "‚ö†Ô∏è")],
          [Markup.button.callback("üÜó", "üÜó"), Markup.button.callback("üÜï", "üÜï")],
        ])
      );
      return ctx.wizard.next();
    },

    // Description
    (ctx) => {
      if (!ctx.callbackQuery) {
        ctx.reply("‚ùå –í–∏–±–µ—Ä—ñ—Ç—å –∑ –∑–∞–ø—Ä–æ–ø–æ–Ω–æ–≤–∞–Ω–∏—Ö –≤–∞—Ä—ñ–∞–Ω—Ç—ñ–≤! –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑:");
        return;
      }

      ctx.session.postData.mark = ctx.callbackQuery.data;
      ctx.reply(description);
      return ctx.wizard.next();
    }
    ,

    // Link
    (ctx) => {
      ctx.session.postData.description = ctx.message.text;
      ctx.reply(link);
      return ctx.wizard.next();
    },

    // Handle Mark Selection and Finish
    (async (ctx) => {
      ctx.session.postData.link = ctx.message.text;
      const post = ctx.session.postData;

      await ctx.reply('‚úÖ –¢–≤—ñ–π –ø–æ—Å—Ç —Å—Ç–≤–æ—Ä–µ–Ω–æ !')
      await ctx.replyWithHTML(
        `<b>${post.title}</b>\n\n` +
        `üí∞ –¶—ñ–Ω–∞: ${post.price} –≥—Ä–Ω\n` +
        `üìå –ê—Ä—Ç–∏–∫—É–ª: ${post.article}\n` +
        `${post.mark} –£—Ü—ñ–Ω–∫–∞: ${post.description}\n\n` +
        `‚û°Ô∏è <a href="${post.link}"><u>–û–ø–∏—Å —Ç–æ–≤–∞—Ä—É –Ω–∞ —Å–∞–π—Ç—ñ</u></a> ‚¨ÖÔ∏è`,
        {
          disable_web_page_preview: true
        }
      );


      delete ctx.session.postData;
      return ctx.scene.leave();
    })
  )
;